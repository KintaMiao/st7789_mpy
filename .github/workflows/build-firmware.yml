name: Build MicroPython Firmware

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      specific_target:
        description: 'Build only a specific target (leave empty for all targets)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: espressif/idf:release-v5.4
    
    strategy:
      fail-fast: false
      matrix:
        target: [
          # ESP32 targets
          "ESP32_GENERIC",
          "ESP32_GENERIC_SPIRAM",
          "ESP32_BOX_LITE",
          "M5CORE",
          "M5CORE2",
          "T-DISPLAY-ESP32",
          "TWATCH-2020",
          
          # ESP32-S2 targets
          "ESP32_GENERIC_S2",
          "LOLIN_S2_MINI",
          
          # ESP32-S3 targets
          "ESP32_GENERIC_S3",
          "ESP32_GENERIC_S3_SPIRAM",
          "ESP32_GENERIC_S3_SPIRAM_OCT",
          "T-DONGLE-S3",
          
          # ESP32-C3 targets
          "ESP32_GENERIC_C3",
          "ESP32_GENERIC_C3_USB"
        ]
    
    steps:
      - name: Check if target should be built
        id: check_target
        run: |
          if [ -n "${{ github.event.inputs.specific_target }}" ] && [ "${{ github.event.inputs.specific_target }}" != "${{ matrix.target }}" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository
        if: steps.check_target.outputs.skip != 'true'
        uses: actions/checkout@v4

      - name: Clone MicroPython
        if: steps.check_target.outputs.skip != 'true'
        run: |
          git clone https://github.com/micropython/micropython.git
          cd micropython
          git checkout v1.25.0
          git submodule update --init --recursive
      
      - name: Build mpy-cross
        if: steps.check_target.outputs.skip != 'true'
        run: |
          cd micropython/mpy-cross
          make

      - name: Determine output file extension
        if: steps.check_target.outputs.skip != 'true'
        id: file_ext
        run: |
          if [[ "${{ matrix.target }}" == *"PYBV11"* ]]; then
            echo "extension=dfu" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.target }}" == *"RP2"* ]] || [[ "${{ matrix.target }}" == *"WIO_TERMINAL"* ]] || [[ "${{ matrix.target }}" == *"T-DISPLAY-RP2040"* ]]; then
            echo "extension=uf2" >> $GITHUB_OUTPUT
          else
            echo "extension=bin" >> $GITHUB_OUTPUT
          fi

      - name: Build MicroPython Firmware
        if: steps.check_target.outputs.skip != 'true'
        run: |
          cd micropython/ports/esp32
          make BOARD=${{ matrix.target }} USER_C_MODULES=../../../st7789/micropython.cmake
          mkdir -p ../../../firmware/${{ matrix.target }}
          cp build-${{ matrix.target }}/firmware.${{ steps.file_ext.outputs.extension }} ../../../firmware/${{ matrix.target }}/

      - name: Upload Firmware
        if: steps.check_target.outputs.skip != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.target }}
          path: firmware/${{ matrix.target }}/firmware.${{ steps.file_ext.outputs.extension }}
          if-no-files-found: error

  # Create a combined artifact with all firmware files
  combine-artifacts:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: repo

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-firmware
          merge-multiple: true

      - name: Create firmware directory structure
        run: |
          mkdir -p combined-firmware
          cp -r all-firmware/* combined-firmware/
          find combined-firmware -type f -name "firmware.*" | sort

      - name: Upload combined firmware
        uses: actions/upload-artifact@v4
        with:
          name: all-firmware
          path: combined-firmware
          if-no-files-found: warn
