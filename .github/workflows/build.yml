name: Build MicroPython Firmware

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: espressif/esp-idf:latest
    strategy:
      matrix:
        target:
          - ESP32_BOX_LITE
          - GENERIC-7789
          - GENERIC_C3
          - GENERIC_C3_USB
          - GENERIC_S2
          - GENERIC_S3_7789
          - GENERIC_S3_SPIRAM
          - GENERIC_S3_SPIRAM_OCT
          - GENERIC_SPIRAM-7789
          - LOLIN_S2_MINI
          - M5CORE
          - M5CORE2
          - PYBV11
          - RP2
          - RP2W
          - T-DISPLAY-ESP32
          - T-DISPLAY-RP2040
          - T-DONGLE-S3
          - TWATCH-2020
          - WIO_TERMINAL

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up ESP-IDF
      run: |
        . $IDF_PATH/export.sh
        cd /opt/esp/idf
        git checkout release/v4.4 # Or your desired ESP-IDF version
        git pull
        git submodule update --init --recursive
        ./install.sh

    - name: Build MicroPython
      run: |
        . $IDF_PATH/export.sh
        cd micropython
        make -C mpy-cross V=1
        cd ports/esp32
        make BOARD_DIR=../../../../firmware/${{ matrix.target }} USER_C_MODULES=../../../../st7789 CFLAGS_EXTRA="-DMODULE_ST7789_ENABLED=1" submodules
        make BOARD_DIR=../../../../firmware/${{ matrix.target }} USER_C_MODULES=../../../../st7789 CFLAGS_EXTRA="-DMODULE_ST7789_ENABLED=1" -j$(nproc)

    - name: Archive firmware
      uses: actions/upload-artifact@v3
      with:
        name: firmware-${{ matrix.target }}
        path: micropython/ports/esp32/build-${{ matrix.target }}/firmware.bin
